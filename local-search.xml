<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vue3-slots</title>
    <link href="/vue3-slots/"/>
    <url>/vue3-slots/</url>
    
    <content type="html"><![CDATA[<h1 id="一、什么是插槽"><a href="#一、什么是插槽" class="headerlink" title="一、什么是插槽"></a>一、什么是插槽</h1><p><strong>插槽</strong>就是子组件中的提供给父组件使用的一个<strong>占位符</strong>，用<code>&lt;slot&gt;&lt;/slot&gt;</code>  表示，父组件可以在这个占位符中填充任何模板代码，如 HTML、组件等，填充的内容会替换子组件的<code>&lt;slot&gt;&lt;/slot&gt;</code>标签，父组件填充的内容称为<strong>插槽内容</strong>。</p><ul><li>子组件不提供插槽时，父组件填充失效</li><li>父组件无填充时，<code>&lt;slot&gt;&lt;/slot&gt;</code>中的<strong>备用内容</strong>会启用生效</li><li>父级模板里的所有内容都是在父级作用域中编译的，子模板里的所有内容都是在子作用域中编译的，互不影响</li></ul><h1 id="二、匿名插槽（默认插槽）"><a href="#二、匿名插槽（默认插槽）" class="headerlink" title="二、匿名插槽（默认插槽）"></a>二、匿名插槽（默认插槽）</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>在外部组件没有提供任何内容的情况下，可以使用匿名插槽提供默认内容。</p><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p>比如<br><code>MyComponent.vue</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;n-el&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span>这是一个默认展示的内容<span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>&lt;/n-el&gt;<br><br><span class="hljs-comment">//组件使用</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">MyComponent</span>/&gt;</span></span><br></code></pre></td></tr></table></figure><p>如下：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5f7cb2e4fabb4d0f8e0f2c4f17dfe13e~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>如果外部组件提供了插槽内容，我们提供的内容会覆盖掉默认的内容</p><p>如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;<span class="hljs-title class_">MyComponent</span>&gt;加入一段文字&lt;/<span class="hljs-title class_">MyComponent</span>&gt;<br></code></pre></td></tr></table></figure><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fcace2a330894022851dfd36009649a0~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><code>注：</code> 插槽内容可以是任意合法的模板内容，不局限于文本。</p><p>如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;<span class="hljs-title class_">MyComponent</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">n-button</span>&gt;</span>加入一个按钮<span class="hljs-tag">&lt;/<span class="hljs-name">n-button</span>&gt;</span></span><br>&lt;/<span class="hljs-title class_">MyComponent</span>&gt;<br></code></pre></td></tr></table></figure><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2e6ea37a35ff41678177b3383c0f8ee7~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h1 id="三、具名插槽"><a href="#三、具名插槽" class="headerlink" title="三、具名插槽"></a>三、具名插槽</h1><h2 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h2><p><code>&lt;slot&gt;</code>元素带有 name 属性的插槽被称为具名插槽。</p><h2 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h2><p>作用于一个组件中拥有多个插槽，而<code>name</code>相当于插槽的标识，用来给各个插槽分配唯一的 ID。</p><p><code>MyComponent.vue</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;n-el <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;flex flex-col justify-center items-center h-[80vh] w-full&quot;</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">n-el</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-[pink] text-[18px] mb-2&quot;</span>&gt;</span>组件相关内容<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;head&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>&lt;/n-el&gt;<br></code></pre></td></tr></table></figure><p>外部引用该组件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;<span class="hljs-title class_">MyComponent</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:head</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>这是头部内容<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:main</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>这是主体内容<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:footer</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>这是尾部内容<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:no</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>组件中没有可匹配的插槽name，不显示<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>&lt;/<span class="hljs-title class_">MyComponent</span>&gt;<br></code></pre></td></tr></table></figure><p><code>v-slot</code>可以简写成<code>#</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;<span class="hljs-title class_">MyComponent</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">head</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>这是头部内容<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">main</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>这是主体内容<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">footer</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>这是尾部内容<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">no</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>组件中没有可匹配的插槽name，不显示<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>&lt;/<span class="hljs-title class_">MyComponent</span>&gt;<br></code></pre></td></tr></table></figure><p>现在  <code>&lt;template&gt;</code>  元素中的所有内容都将被传递到相应的插槽。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/70c05ad19c1b4839a92ea8d1c5652fe3~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2a194900097343ccb04d792893a5ece0~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><code>注意：</code> 匿名插槽也有自己的<code>name</code>，只不过 name 会被隐式地命名为<code>default</code>。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ab60634c7c7e4674a63af85766d62739~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>上面的写法等价于:</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/87c6836186464a22ae4c61689d16322c~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/69366fd463024b7796db3ad686f4dbdc~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h1 id="四、动态插槽名"><a href="#四、动态插槽名" class="headerlink" title="四、动态插槽名"></a>四、动态插槽名</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;<span class="hljs-title class_">MyComponent</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:</span>[<span class="hljs-attr">slotName</span>]&gt;</span></span><br><span class="language-xml">    ...</span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><br>  &lt;!-- 缩写为 --&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #[<span class="hljs-attr">slotName</span>]&gt;</span></span><br><span class="language-xml">    ...</span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>&lt;/<span class="hljs-title class_">MyComponent</span>&gt;<br><br></code></pre></td></tr></table></figure><p>如下<br><code>MyComponent.vue</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;n-el&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>组件相关内容<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;head&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>&lt;/n-el&gt;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script setup lang=<span class="hljs-string">&quot;ts&quot;</span>&gt;<br>  <span class="hljs-keyword">const</span> data = <span class="hljs-string">&#x27;head&#x27;</span><br>&lt;/script&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">    ......</span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">MyComponent</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #[<span class="hljs-attr">data</span>]&gt;</span> 头部内容 <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">MyComponent</span>&gt;</span></span><br><span class="language-xml">    .......</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bf234b04cf3e405c85c7770cbe8c92d2~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h1 id="五、作用域插槽"><a href="#五、作用域插槽" class="headerlink" title="五、作用域插槽"></a>五、作用域插槽</h1><h2 id="介绍-2"><a href="#介绍-2" class="headerlink" title="介绍"></a>介绍</h2><p>作用域插槽可以让父级外层组件能够访问子组件的数据，子组件向将数据提供给插槽，组件 props 传递数据的方式，子组件向插槽传递一个<code>attributes</code>，父组件通过<code>v-slot</code>带的值（任意命名）来获取子组件的数据。</p><h2 id="使用场景-2"><a href="#使用场景-2" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="一-、默认插槽"><a href="#一-、默认插槽" class="headerlink" title="(一)、默认插槽"></a>(一)、默认插槽</h3><p><code>MyComponent.vue</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;n-el <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;flex flex-col justify-center items-center h-[80vh] w-full&quot;</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;螺蛳粉&quot;</span> <span class="hljs-attr">data</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>&lt;/n-el&gt;<br></code></pre></td></tr></table></figure><h4 id="写法一：-v-slot-写在组件上"><a href="#写法一：-v-slot-写在组件上" class="headerlink" title="写法一： v-slot 写在组件上"></a>写法一： v-slot 写在组件上</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;<span class="hljs-title class_">MyComponent</span> v-slot=<span class="hljs-string">&quot;res&quot;</span>&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>老板：来 &#123;&#123; res.data &#125;&#125; 份 &#123;&#123; res.content &#125;&#125; ~<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br> &lt;/<span class="hljs-title class_">MyComponent</span>&gt;<br></code></pre></td></tr></table></figure><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/39430b742a864b94a35f3946a68d0a20~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><code>注意：</code> <code>v-slot=&quot;res&quot;</code>  可以类比这里的函数签名，和函数的参数类似，我们也可以在  <code>v-slot</code>  中使用解构：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;<span class="hljs-title class_">MyComponent</span> v-slot=<span class="hljs-string">&quot;&#123; data, content &#125;&quot;</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">    老板：来 &#123;&#123; data &#125;&#125; 份 &#123;&#123; content &#125;&#125; ~</span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br>&lt;/<span class="hljs-title class_">MyComponent</span>&gt;<br></code></pre></td></tr></table></figure><h4 id="写法二：-v-slot-写在-template-上"><a href="#写法二：-v-slot-写在-template-上" class="headerlink" title="写法二： v-slot 写在 template 上"></a>写法二： v-slot 写在 template 上</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;<span class="hljs-title class_">MyComponent</span>&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:default</span>=<span class="hljs-string">&quot;res&quot;</span>&gt;</span></span><br><span class="language-xml">     <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>老板：来 &#123;&#123; res.data &#125;&#125; 份 &#123;&#123; res.content &#125;&#125; ~<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><br>   <span class="hljs-comment">//或者</span><br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">default</span>=<span class="hljs-string">&quot;res&quot;</span>&gt;</span></span><br><span class="language-xml">     <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>老板：来 &#123;&#123; res.data &#125;&#125; 份 &#123;&#123; res.content &#125;&#125; ~<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><br> &lt;/<span class="hljs-title class_">MyComponent</span>&gt;<br></code></pre></td></tr></table></figure><h3 id="二-、具名插槽"><a href="#二-、具名插槽" class="headerlink" title="(二)、具名插槽"></a>(二)、具名插槽</h3><p>具名作用域插槽的工作方式也是类似的，插槽 props 可以作为  <code>v-slot</code>  指令的值被访问到：<code>v-slot:name=&quot;slotProps&quot;</code>。当使用缩写时是这样：</p><p><code>MyComponent.vue</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;n-el <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;flex flex-col justify-center items-center h-[80vh] w-full&quot;</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;北京烤鸭&quot;</span> <span class="hljs-attr">data</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;food1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;长沙臭豆腐&quot;</span> <span class="hljs-attr">data</span>=<span class="hljs-string">&quot;15&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;food2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>&lt;/n-el&gt;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;<span class="hljs-title class_">MyComponent</span>&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">food1</span>=<span class="hljs-string">&quot;res&quot;</span>&gt;</span></span><br><span class="language-xml">     <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>老板：来 &#123;&#123; res.data &#125;&#125; 份 &#123;&#123; res.content &#125;&#125; ~<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">food2</span>=<span class="hljs-string">&quot;res&quot;</span>&gt;</span></span><br><span class="language-xml">     <span class="hljs-tag">&lt;<span class="hljs-name">n-el</span>&gt;</span>老板：来 &#123;&#123; res.data &#125;&#125; 份 &#123;&#123; res.content &#125;&#125; ~<span class="hljs-tag">&lt;/<span class="hljs-name">n-el</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br> &lt;/<span class="hljs-title class_">MyComponent</span>&gt;<br></code></pre></td></tr></table></figure><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c6af0f22883646c2b657d4b75c78352b~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vue-study</title>
    <link href="/vue-study/"/>
    <url>/vue-study/</url>
    
    <content type="html"><![CDATA[<h1 id="一、全局-API"><a href="#一、全局-API" class="headerlink" title="一、全局 API"></a>一、全局 API</h1><h2 id="一-、createApp"><a href="#一-、createApp" class="headerlink" title="(一)、createApp()"></a>(一)、createApp()</h2><p>创建一个应用实例。</p><p>内联根组件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(&#123;<br>  <span class="hljs-comment">//.....</span><br>&#125;);<br></code></pre></td></tr></table></figure><p>使用从别处导入的组件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>);<br></code></pre></td></tr></table></figure><h2 id="二-、app-mount"><a href="#二-、app-mount" class="headerlink" title="(二)、app.mount()"></a>(二)、app.mount()</h2><p>将应用实例挂载在一个容器元素中。</p><p>参数可以是一个实际的 DOM 元素或者一个 CSS 选择器</p><p>CSS 选择器为参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-comment">/* ... */</span>);<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&quot;#app&quot;</span>);<br></code></pre></td></tr></table></figure><p>DOM 元素为参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">app.<span class="hljs-title function_">mount</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">firstChild</span>);<br></code></pre></td></tr></table></figure><h2 id="三-、app-unmount"><a href="#三-、app-unmount" class="headerlink" title="(三)、app.unmount()"></a>(三)、app.unmount()</h2><p>卸载一个已挂载的应用实例。</p><h2 id="四-、app-provide"><a href="#四-、app-provide" class="headerlink" title="(四)、app.provide()"></a>(四)、app.provide()</h2><p>提供一个值，可以给后代的所有组件使用</p><p>参数 1：注入的 key<br>参数 2：提供的值</p><p>示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-comment">/*...*/</span>);<br>app.<span class="hljs-title function_">provide</span>(<span class="hljs-string">&quot;message&quot;</span>, <span class="hljs-string">&quot;hello&quot;</span>);<br></code></pre></td></tr></table></figure><p>后代组件使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; inject &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">inject</span>(<span class="hljs-string">&quot;message&quot;</span>)); <span class="hljs-comment">// &#x27;hello&#x27;</span><br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="五-、app-directive-自定义指令"><a href="#五-、app-directive-自定义指令" class="headerlink" title="(五)、app.directive 自定义指令"></a>(五)、app.directive 自定义指令</h2><p>参考文档：<a href="https://blog.csdn.net/weixin_52203618/article/details/127867548">https://blog.csdn.net/weixin_52203618/article/details/127867548</a></p><h2 id="六-、app-use-安装一个插件"><a href="#六-、app-use-安装一个插件" class="headerlink" title="(六)、app.use() 安装一个插件"></a>(六)、app.use() 安装一个插件</h2><ul><li>参数 1：插件本身</li><li>参数 2：传递给插件的选项</li></ul><h2 id="七-、app-mixin-混合"><a href="#七-、app-mixin-混合" class="headerlink" title="(七)、app.mixin()混合"></a>(七)、app.mixin()混合</h2><p>应用一个全局 mixin。一个全局的 mixin 会作用于应用中的每个组件实例。</p><h2 id="（八）、app-version"><a href="#（八）、app-version" class="headerlink" title="（八）、app.version"></a>（八）、app.version</h2><p>当前应用所使用的 vue 版本号。</p><h2 id="（九）、app-config-globalProperties"><a href="#（九）、app-config-globalProperties" class="headerlink" title="（九）、app.config.globalProperties"></a>（九）、app.config.globalProperties</h2><p>一个用于注册能够被应用内所有组件实例访问到的全局属性的对象。<br>用法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">app.<span class="hljs-property">config</span>.<span class="hljs-property">globalProperties</span>.<span class="hljs-property">msg</span> = <span class="hljs-string">&quot;hello&quot;</span>;<br></code></pre></td></tr></table></figure><p>这使得 msg 在应用的任意组件模板上都可以使用，并且也可以通过任意组件实例的 this 访问到</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">msg</span>); <span class="hljs-comment">// &#x27;hello&#x27;</span><br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><h1 id="二、通用-API"><a href="#二、通用-API" class="headerlink" title="二、通用 API"></a>二、通用 API</h1><h2 id="一-、version"><a href="#一-、version" class="headerlink" title="(一)、version"></a>(一)、version</h2><p>暴露当前所使用的 Vue 版本。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; version &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(version);<br></code></pre></td></tr></table></figure><h2 id="二-、nextTick"><a href="#二-、nextTick" class="headerlink" title="(二)、nextTick()"></a>(二)、nextTick()</h2><p>等待下一次 DOM 更新刷新的工具方法。</p><p>当你在 Vue 中更改响应式状态时，最周的 DOM 更新并不是同步生效的，而是由 Vue 将他们缓存在一个队列中，直到下一个”tick”才一起执行。这样是为了确保每个组件无论发生多少次状态改变，都仅执行一次更新。</p><p><code>nextTick()</code>可以在状态改变后立即使用，以等待 DOM 更新完成。你可以传递一个回调函数作为参数，或者<code>await</code>返回的<code>Promise</code>。</p><h1 id="三、组合式-API"><a href="#三、组合式-API" class="headerlink" title="三、组合式 API"></a>三、组合式 API</h1><h2 id="一-、readonly"><a href="#一-、readonly" class="headerlink" title="(一)、readonly()"></a>(一)、readonly()</h2><p>说明：接受一个<code>对象</code>（不管是响应式的还是普通的）或者是一个 ref，返回的是一个只读的原值。<br>细节：它是深层的。即不管原值是多少个子节点，孙节点，都是只读。<br>用途：保护某些数据不让它有意外的被修改。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo | 搭建个人网站</title>
    <link href="/hexo-start/"/>
    <url>/hexo-start/</url>
    
    <content type="html"><![CDATA[<h1 id="一、安装-hexo"><a href="#一、安装-hexo" class="headerlink" title="一、安装 hexo"></a>一、安装 hexo</h1>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
